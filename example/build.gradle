buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath files("../build/libs/application-plugin.jar")
        classpath "org.jsoup:jsoup:1.15.3"
        classpath "org.commonmark:commonmark:0.21.0"
        classpath "org.nanohttpd:nanohttpd-webserver:2.3.1"
    }
}

apply plugin: "java"
apply plugin: "nl.colorize.gradle.application"

group = "nl.colorize"
version = "0.1"
compileJava.options.encoding = "UTF-8"

java {
    sourceCompatibility = "21"
    targetCompatibility = "21"
    sourceSets.main.java.srcDirs = ["source"]
    sourceSets.main.resources.srcDirs = ["../resources"]
    sourceSets.test.java.srcDirs = ["source"]
}

macApplicationBundle {
    name = "Example"
    identifier = "com.example"
    bundleVersion = "0.1"
    description = "A simple example application"
    copyright = "Copyright 2010-2024 Colorize"
    icon = "../resources/icon.icns"
    applicationCategory = "public.app-category.developer-tools"
    mainClassName = "com.example.ExampleApp"
    contentDir = "${buildDir}/fatJar"
    mainJarName = "example-fat.jar"
}

msi {
    inherit = true
    mainJarName = "example.jar"
    vendor = "Colorize"
    icon = "../resources/icon.ico"
    uuid = "b9112b5f-2340-4541-8883-6abd3c9c8780"
}

exe {
    inherit = true
    mainJarName = "example.jar"
    icon = "${projectDir}/../resources/icon.ico"
    supportURL = "https://www.colorize.nl"
}

xcode {
    appId = "Example"
    bundleId = "com.example"
    appName = "Example App"
    bundleVersion = "0.1"
    icon = "../resources/icon.png"
    resourcesDir = "${buildDir}/staticsite"
}

pwa {
    webAppDir = "${buildDir}/staticsite"
    manifest = "web/manifest.json"
    cacheName = "example"
}

staticSite {
    contentDir = "web"
}

generateStaticSite.doLast {
    copy {
        from "../resources/icon.png"
        into "${buildDir}/staticsite/images"
    }
}

task fatJar(type: Jar) {
    destinationDirectory = file("${buildDir}/fatJar")
    archiveFileName = "example-fat.jar"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude "**/module-info.class"
    exclude "**/META-INF/INDEX.LIST"
    exclude "**/META-INF/*.SF"
    exclude "**/META-INF/*.DSA"
    exclude "**/META-INF/*.RSA"

    manifest {
        attributes "Application-Name": "Example"
        attributes "Main-Class": "com.example.ExampleApp"
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    with jar
}

createApplicationBundle.dependsOn fatJar
generatePWA.dependsOn generateStaticSite
xcodeGen.dependsOn generateStaticSite
