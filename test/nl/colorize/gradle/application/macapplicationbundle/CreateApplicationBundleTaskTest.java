//-----------------------------------------------------------------------------
// Gradle Application Plugin
// Copyright 2010-2024 Colorize
// Apache license (http://www.apache.org/licenses/LICENSE-2.0)
//-----------------------------------------------------------------------------

package nl.colorize.gradle.application.macapplicationbundle;

import nl.colorize.gradle.application.ApplicationPlugin;
import org.gradle.api.Project;
import org.gradle.testfixtures.ProjectBuilder;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import static java.nio.charset.StandardCharsets.UTF_8;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

class CreateApplicationBundleTaskTest {

    @Test
    void createApplicationBundleJLink(@TempDir File tempDir) {
        Project project = ProjectBuilder.builder()
            .withProjectDir(tempDir)
            .build();

        ApplicationPlugin plugin = new ApplicationPlugin();
        plugin.apply(project);

        MacApplicationBundleExt config = new MacApplicationBundleExt();
        config.setName("Example");
        config.setIdentifier("com.example");
        config.setDescription("A description for your application");
        config.setCopyright("Copyright 2024");
        config.setMainJarName("example.jar");
        config.setMainClassName("HelloWorld.Main");
        config.setContentDir("resources");
        config.setBundleVersion("1.0");

        CreateApplicationBundleTask task = (CreateApplicationBundleTask) project.getTasks()
            .getByName("createApplicationBundle");
        task.run(config);

        assertTrue(new File(tempDir + "/build/mac/Example.app").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/Java").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/Java/example.jar").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/MacOS").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/MacOS/JavaAppLauncher").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/Plugins").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/Plugins/temurin-21.jdk").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/Resources").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/Resources/icon.icns").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/Info.plist").exists());
        assertTrue(new File(tempDir + "/build/mac/Example.app/Contents/PkgInfo").exists());
    }

    @Test
    void generateLauncherScript(@TempDir File tempDir) throws IOException {
        Project project = ProjectBuilder.builder()
            .withProjectDir(tempDir)
            .build();

        ApplicationPlugin plugin = new ApplicationPlugin();
        plugin.apply(project);

        MacApplicationBundleExt config = new MacApplicationBundleExt();
        config.setName("Example");
        config.setIdentifier("com.example");
        config.setMainJarName("example.jar");
        config.setMainClassName("HelloWorld.Main");
        config.setContentDir("resources");
        config.setLauncher("shell");

        CreateApplicationBundleTask task = (CreateApplicationBundleTask) project.getTasks()
            .getByName("createApplicationBundle");
        task.run(config);

        File appDir = new File(tempDir + "/build/mac/Example.app");
        File jdkDir = new File(appDir + "/Contents/PlugIns/temurin-21.jdk");
        File launcher = new File(appDir + "/Contents/MacOS/ColorizeLauncher");

        assertTrue(appDir.exists());
        assertTrue(jdkDir.exists());
        assertTrue(new File(jdkDir + "/Contents/Home/bin").exists());
        assertTrue(new File(jdkDir + "/Contents/Home/bin/java").exists());
        assertTrue(new File(jdkDir + "/Contents/Home/bin/java").canExecute());

        String expected = """
            #!/usr/bin/env bash
                        
            # -----------------------------------------------------------------------------
            # File generated by Colorize Gradle application plugin
            # -----------------------------------------------------------------------------
                        
            LAUNCHER_DIR=$(dirname "$0")
                        
            "$LAUNCHER_DIR/../PlugIns/temurin-21.jdk/Contents/Home/bin/java" \\
                -Djava.launcher.path="$LAUNCHER_DIR" \\
                -Djava.library.path="$LAUNCHER_DIR" \\
                -Xmx2g \\
                -Xdock:name="Example" \\
                -Xdock:icon="$LAUNCHER_DIR/../Resources/icon.icns" \\
                -jar "$LAUNCHER_DIR/../Java/example.jar"
            """;

        assertTrue(launcher.exists());
        assertTrue(launcher.canExecute());
        assertEquals(expected.strip(), Files.readString(launcher.toPath(), UTF_8).strip());
    }
}
