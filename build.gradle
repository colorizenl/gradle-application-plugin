buildscript {
    repositories {
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:1.3.1"
    }
}

plugins {
    id "io.freefair.lombok" version "8.13"
    id "com.github.ben-manes.versions" version "0.52.0"
}

apply plugin: "java-gradle-plugin"
apply plugin: "com.gradle.plugin-publish"
apply plugin: "jacoco"

group = "nl.colorize"
version = "2025.1"
compileJava.options.encoding = "UTF-8"

java {
    sourceCompatibility = "21"
    targetCompatibility = "21"
    sourceSets.main.java.srcDirs = ["source"]
    sourceSets.main.resources.srcDirs = ["resources"]
    sourceSets.test.java.srcDirs = ["test"]
}

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    implementation files("lib/appbundler-1.0ea.jar")
    implementation "org.jsoup:jsoup:1.19.1"
    implementation "org.commonmark:commonmark:0.24.0"
    implementation "org.nanohttpd:nanohttpd-webserver:2.3.1"
    testImplementation "org.junit.jupiter:junit-jupiter:5.12.1"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

jar {
    archiveFileName = "application-plugin.jar"
    duplicatesStrategy = DuplicatesStrategy.WARN
    exclude "**/module-info.class"
    exclude "**/META-INF/INDEX.LIST"
    exclude "**/META-INF/*.SF"
    exclude "**/META-INF/*.DSA"
    exclude "**/META-INF/*.RSA"

    from {
        configurations.runtimeClasspath
            .filter { it.toString().endsWith("appbundler-1.0ea.jar") }
            .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    if (project.hasProperty("headless")) {
        exclude "**/macapplicationbundle/**", "**/windowsexe/**"
    }
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["**/**Ext**"])
        })
    }
}

gradlePlugin {
    website = "https://www.clrz.nl"
    vcsUrl = "https://github.com/colorizenl/gradle-application-plugin"

    plugins {
        applicationPlugin {
            id = "nl.colorize.gradle.application"
            implementationClass = "nl.colorize.gradle.application.ApplicationPlugin"
            displayName = "Gradle application plugin"
            description = "Build native applications for Windows, Mac, iOS, Android, and web."
            tags.set(["application", "mac", "macos", "application bundle", "windows", "msi", "exe", "pwa", "xcode"])
        }
    }
}

// Gradle has a compatibility issue with Java 17+ when running tests,
// see https://github.com/gradle/gradle/issues/18647 for details.
tasks.withType(Test).configureEach {
    jvmArgs(["--add-opens=java.base/java.lang=ALL-UNNAMED", "--add-opens=java.base/java.util=ALL-UNNAMED"])
}

task coverage(dependsOn: ["test", "jacocoTestReport"]) {
    doLast {
        def report = file("${buildDir}/reports/jacoco/test/html/index.html").text
        def coverage = report =~ "tfoot.*?ctr2.*?>([\\d.]+%).*?tfoot"
        println "-" * 40
        println "Test coverage: " + coverage[0][1]
    }
}
